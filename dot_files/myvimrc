filetype indent on

"""""""""""""""""""""""""""""""""""""""""
let g:ycm_global_ycm_extra_conf = '~/.vim/.ycm_extra_conf.py'

"YouCompleteMe shortcuts
nnoremap <leader>g :YcmCompleter GoTo<CR>
nnoremap <leader>i :YcmCompleter GoToInclude<CR>
nnoremap <leader>c :YcmCompleter GoToDeclaration<CR>
nnoremap <leader>t :YcmCompleter GetType<CR>
nnoremap <leader>p :YcmCompleter GetParent<CR>
nnoremap <leader>f :YcmCompleter FixIt<CR>
nnoremap <leader>r :YcmCompleter GoToReferences<CR>
" GotoDefinition doesn't work if the definition is in a different
" translation unit (which makes it pretty useless):
" https://github.com/Valloric/YouCompleteMe/issues/2448
"nnoremap <C-D> :YcmCompleter GoToDefinition<CR>
"map <A-D> :YcmCompleter GetDoc<CR>
"map <A-F> :YcmCompleter FixIt<CR>
"Not available in C/C++ :(
"nnoremap <C-R> :YcmCompleter GoToReferences<CR>

"Showing diagnostic list in "location-list"
" :YcmDiag
"This doesn't work so well with boost :(
"For now dont show errors that YCM finds
"let g:ycm_enable_diagnostic_signs = 0
"let g:ycm_show_diagnostics_ui = 0
"let g:ycm_autoclose_preview_window_after_completion = 1
"""""""""""""""""""""""""""""""""""""""""
"Replay last macro by typing enter
nnoremap <Enter> @@

if has('nvim')
   "Using xclip for better clipboard integration:
   "https://github.com/neovim/neovim/issues/6097
   set clipboard+=unnamedplus
   let g:os = substitute(system('uname -a'), '\n', '', '')

   if g:os =~ "Microsoft"
      "WSL detected, we need to do some weirdness to interact
      " with the system clipboard ...
      "Figured this out by looking at this:
      " https://github.com/neovim/neovim/blob/master/runtime/autoload/provider/clipboard.vim
      let g:clipboard = {
               \   'name': 'myClipboard',
               \   'copy': {
               \      '+': 'nvimCopy.sh',
               \      '*': 'nvimCopy.sh',
               \    },
               \   'paste': {
               \      '+': "nvimPaste.sh",
               \      '-': "nvimPaste.sh",
               \   },
               \   'cache_enabled': 1,
               \ }
   else
      if executable('xclip') == 1
         " This is faster than the default xsel for linux
         " Loopks like this is the default in newer version of neovim:
         " https://github.com/neovim/neovim/pull/9302
         let g:clipboard = {
                  \   'name': 'fast_xclip',
                  \   'copy': {
                  \      '+': 'xclip -quiet -i -selection primary',
                  \      '*': 'xclip -quiet -i -selection primary',
                  \    },
                  \   'paste': {
                  \      '+': 'xclip -o -selection primary',
                  \      '-': 'xclip -o -selection primary',
                  \   },
                  \   'cache_enabled': 1,
                  \ }
      endif
   endif

   "Use Escape to exit terminal "insert" mode
   tnoremap <Esc> <C-\><C-n>

   "Meta-[ will send escape to terminal
   tnoremap <M-[> <Esc>

endif

"Some NERDTree customizations take from:
"https://medium.com/@victormours/a-better-nerdtree-setup-3d3921abc0b9
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
let NERDTreeQuitOnOpen = 0
let NERDTreeAutoDeleteBuffer = 1
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1

"Move vim around windows with ctrl-<hjkl>
imap <C-h> <C-o>h
imap <C-j> <C-o>j
imap <C-k> <C-o>k
imap <C-l> <C-o>l

"https://superuser.com/questions/77800/vims-autocomplete-how-to-prevent-vim-to-read-some-include-files
set include=^\\s*#\\s*include\ \\(<boost/\\)\\@!

"colorscheme solarized
colorscheme inkpot

"clang-format.py is provided by the 'clang-format' package
map <C-Y> :py3f /usr/share/vim/addons/syntax/clang-format.py<cr>
imap <C-Y> <c-o>:py3f /usr/share/vim/addons/syntax/clang-format.py<cr>

"Limit the control-p scanned files (otherwise vim can hang)
let g:ctrlp_max_files = 10000
" Set the MRU option as the default ctrl-p mode
let g:ctrlp_cmd = 'CtrlPMRU'
" https://github.com/scrooloose/nerdtree/issues/250
let NERDTreeCreatePrefix='silent keepalt keepjumps'

set textwidth=110
